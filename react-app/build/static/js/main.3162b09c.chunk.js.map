{"version":3,"sources":["context/Modal.js","store/session.js","store/booking.js","store/index.js","store/task.js","store/review.js","store/taskers.js","store/billing.js","store/messages.js","components/SignupFormPage/index.js","components/LoginFormPage/index.js","components/OpenModalButton/index.js","components/LoginFormModal/index.js","components/SignupFormModal/index.js","components/Navigation/ProfileButton.js","components/Navigation/index.js","components/Chat/Chat.js","components/Reviews/DeleteReview.js","components/Reviews/ReviewForm.js","components/Reviews/EditReview.js","components/Reviews/CurrentUserReviews.js","components/Reviews/CreateReview.js","components/Bookings/DeleteBooking.js","components/Bookings/GetCurrentBookings.js","components/Tasks/GetAllTasks.js","components/Bookings/BookingForm.js","components/Bookings/CreateBooking.js","components/Bookings/EditBooking.js","components/Taskers/GetAllTaskers.js","components/Taskers/SingleTasker.js","components/SearchBar/index.js","components/Billing/DeleteCard.js","components/Billing/BillingForm.js","components/Billing/CreateCard.js","components/Billing/CurrentUserCards.js","components/AccountPage/AccountPage.js","components/SearchResults/index.js","components/UserProfiles/Users.js","components/UserProfiles/UserProfile.js","App.js","index.js"],"names":["ModalContext","React","createContext","ModalProvider","children","modalRef","useRef","useState","modalContent","setModalContent","onModalClose","setOnModalClose","contextValue","closeModal","Provider","value","ref","Modal","useContext","current","ReactDOM","createPortal","id","onClick","useModal","SET_USER","REMOVE_USER","GET_ALL_USERS","setUser","user","type","payload","initialState","allUsers","login","email","password","dispatch","fetch","method","headers","body","JSON","stringify","response","ok","json","data","status","errors","signUp","username","first_name","last_name","city","phone_number","enhancer","GET_ALL_BOOKINGS","EDIT_BOOKING","GET_ONE_BOOKING","DELETE_BOOKING","createBooking","booking","editBooking","thunkCreateBooking","tasker_id","thunkCurrentUserBookings","bookings","thunkEditBooking","thunkDeleteBooking","bookingId","currentUserBookings","singleBooking","bookingReducer","state","action","newState","allBookings","forEach","newBooking","GET_ALL_TASKS","thunkAllTasks","tasks","allTasks","singleTask","taskReducer","task","GET_ALL_CURR_REVIEWS","GET_ALL_REVIEWS","CREATE_REVIEW","EDIT_REVIEW","GET_ONE_REVIEW","DELETE_REVIEW","getReview","review","createReview","editReview","deleteReview","thunkCurrUserReviews","reviews","thunkAllReviews","thunkOneReview","thunkCreateReview","thunkEditReview","currentUserReviews","singleReview","allReviews","reviewsReducer","allCurrReviews","newReview","newSingleState","reviewId","GET_ALL_TASKERS","GET_SINGLE_TASKER","loadAllTaskers","taskers","loadSingleTasker","tasker","thunkAllTaskers","thunkSingleTasker","allTaskers","singleTasker","taskersReducer","GET_CURRENT_CARDS","CREATE_CARD","DELETE_CARD","createCard","card","deleteCard","cardId","thunkCurrUserCards","cards","thunkCreateCard","thunkDeleteCard","currentUserCards","billingsReducer","newCard","GET_ALL_MESSAGES","GET_USER_MESSAGES","CREATE_USER_MESSAGE","thunkAllMessages","msgs","thunkCreateUserMessage","message","allMsg","userMsgs","messagesReducer","allMsgs","msg","newMessage","rootReducer","combineReducers","session","users","billing","messages","applyMiddleware","thunk","configureStore","preloadedState","createStore","SignupFormPage","useDispatch","sessionUser","useSelector","setEmail","setUsername","setPassword","confirmPassword","setConfirmPassword","setCity","setphone_number","setfirst_name","setlast_name","setErrors","to","handleSubmit","e","preventDefault","onSubmit","map","error","idx","onChange","target","required","className","LoginFormPage","OpenModalButton","modalComponent","buttonText","onButtonClick","LoginFormModal","disabled","then","SignupFormModal","validationErrors","setValidationErrors","Object","keys","length","ProfileButton","showMenu","setShowMenu","ulRef","history","useHistory","useEffect","closeMenu","contains","document","addEventListener","removeEventListener","ulClassName","push","onItemClick","Navigation","socket","isLoaded","exact","src","DeleteReview","thunkDeleteReview","ReviewForm","formType","review_text","setReview_text","star_rating","setStar_rating","activeRating","setActiveRating","handleMouseLeave","handleClick","index","parseInt","arr","onMouseEnter","handleMouseEnter","onMouseLeave","err","placeholder","EditReview","GetCurrentReviews","starDisplay","starsArr","i","totalReviews","totalRating","values","averageRating","toFixed","CreateReview","taskerId","DeleteBooking","handleDelete","GetCurrentBookings","bookingsObj","bookingsArr","currUser","findReviews","filter","user_id","allTaskersObj","allTaskersArr","matchedTaskersArr","matchedTasker","find","class","profile_image","category","duration","details","updated_at","GetAllTasks","tasksObj","tasksArr","description","available","BookingForm","setCategory","setDuration","setDetails","useParams","allTasksObj","taskersTask","taskerObj","name","checked","CreateBooking","booked","EditBooking","thunkOneBooking","GetAllTaskers","tools","vehicles","GetSingleTasker","allReviewsArr","allowed","checkBookings","allTaskerRev","checkReviews","rev","bio","includes","SearchBar","location","useLocation","searchInput","setSearchInput","onKeyDown","key","pathname","search","hidden","Fragment","hourly_rate","DeleteCard","BillingForm","set_first_name","set_last_name","card_number","set_card_number","security_code","set_security_code","debit_card","set_debit_card","errorHandling","toString","isNaN","CreateCard","GetCurrentCards","billings","billingsArr","slice","AccountPage","SearchResults","searchResults","setSearchResults","URLSearchParams","get","handleSearch","results","catch","console","highlightText","text","lowerCaseText","toLowerCase","lowerCaseSearchInput","parts","startIndex","indexOf","substr","substring","result","url","firstName","lastName","price","phone","Chat","chatInput","setChatInput","setMessages","userMessageId","messagesEndRef","scrollToBottom","scrollIntoView","scrollIntoViewOptions","block","inline","behavior","io","on","chat","disconnect","userId","userInfo","emit","user_message_id","Users","check","userMsgId","checks","user1_id","user2_id","checkUserMsg","createUserMsgId","UserProfile","res","App","setIsLoaded","path","component","GetCurrentUserReviews","store","Root","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3162b09c.chunk.js","sourcesContent":["import React, { useRef, useState, useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nconst ModalContext = React.createContext();\n\nexport function ModalProvider({ children }) {\n  const modalRef = useRef();\n  const [modalContent, setModalContent] = useState(null);\n  // callback function that will be called when modal is closing\n  const [onModalClose, setOnModalClose] = useState(null);\n\n  const closeModal = () => {\n    setModalContent(null); // clear the modal contents\n    // If callback function is truthy, call the callback function and reset it\n    // to null:\n    if (typeof onModalClose === 'function') {\n      setOnModalClose(null);\n      onModalClose();\n    }\n  };\n\n  const contextValue = {\n    modalRef, // reference to modal div\n    modalContent, // React component to render inside modal\n    setModalContent, // function to set the React component to render inside modal\n    setOnModalClose, // function to set the callback function called when modal is closing\n    closeModal // function to close the modal\n  };\n\n  return (\n    <>\n      <ModalContext.Provider value={contextValue}>\n        {children}\n      </ModalContext.Provider>\n      <div ref={modalRef} />\n    </>\n  );\n}\n\nexport function Modal() {\n  const { modalRef, modalContent, closeModal } = useContext(ModalContext);\n  // If there is no div referenced by the modalRef or modalContent is not a\n  // truthy value, render nothing:\n  if (!modalRef || !modalRef.current || !modalContent) return null;\n\n  // Render the following component to the div referenced by the modalRef\n  return ReactDOM.createPortal(\n    <div id=\"modal\">\n      <div id=\"modal-background\" onClick={closeModal} />\n      <div id=\"modal-content\">\n        {modalContent}\n      </div>\n    </div>,\n    modalRef.current\n  );\n}\n\nexport const useModal = () => useContext(ModalContext);","// constants\nconst SET_USER = \"session/SET_USER\";\nconst REMOVE_USER = \"session/REMOVE_USER\";\nconst GET_ALL_USERS = '/session/GET_ALL_USERS'\n\nconst allUsers = users => ({\n    type: GET_ALL_USERS,\n    users\n})\n\nconst setUser = (user) => ({\n\ttype: SET_USER,\n\tpayload: user,\n});\n\nconst removeUser = () => ({\n\ttype: REMOVE_USER,\n});\n\nconst initialState = { user: null, allUsers:{} };\n\nexport const thunkAllUsers = () => async (dispatch) => {\n    const res = await fetch('/api/users/')\n    if (res.ok) {\n        const data = await res.json()\n        dispatch(allUsers(data))\n    }\n}\n\nexport const authenticate = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn;\n\t\t}\n\n\t\tdispatch(setUser(data));\n\t}\n};\n\nexport const login = (email, password) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/login\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\temail,\n\t\t\tpassword,\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport const logout = () => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/logout\", {\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t});\n\n\tif (response.ok) {\n\t\tdispatch(removeUser());\n\t}\n};\n\nexport const signUp = (username, email, first_name, last_name, password, city, phone_number) => async (dispatch) => {\n\tconst response = await fetch(\"/api/auth/signup\", {\n\t\tmethod: \"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\",\n\t\t},\n\t\tbody: JSON.stringify({\n\t\t\tusername,\n\t\t\temail,\n\t\t\tfirst_name,\n\t\t\tlast_name,\n\t\t\tpassword,\n\t\t\tcity,\n\t\t\tphone_number\n\t\t}),\n\t});\n\n\tif (response.ok) {\n\t\tconst data = await response.json();\n\t\tdispatch(setUser(data));\n\t\treturn null;\n\t} else if (response.status < 500) {\n\t\tconst data = await response.json();\n\t\tif (data.errors) {\n\t\t\treturn data.errors;\n\t\t}\n\t} else {\n\t\treturn [\"An error occurred. Please try again.\"];\n\t}\n};\n\nexport default function reducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase SET_USER:\n\t\t\treturn { ...state, user: action.payload };\n\t\tcase REMOVE_USER:\n\t\t\treturn { ...state, user: null};\n\n\t\t\tcase GET_ALL_USERS: {\n\t\t\t\tconst newState = {}\n\t\t\t\tconst users = action.users\n\t\t\t\tusers.users.forEach(user => {\n\t\t\t\t\tnewState[user.id] = user\n\t\t\t\t})\n\t\t\t\treturn {\n\t\t\t\t\t...state,\n\t\t\t\t\tallUsers: newState\n\t\t\t\t}\n\t\t\t}\n\n\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n","const GET_ALL_BOOKINGS = 'bookings/getAllBookings'\nconst CREATE_BOOKING = \"bookings/createABooking\"\nconst EDIT_BOOKING = \"bookings/editBooking\"\nconst GET_ONE_BOOKING = \"bookings/getOneBooking\"\nconst DELETE_BOOKING = \"bookings/deleteBooking\"\n\nconst getAllBookingsAction = bookings => ({\n    type: GET_ALL_BOOKINGS,\n    bookings\n})\n\nconst getBooking = booking => ({\n    type: GET_ONE_BOOKING,\n    booking\n})\n\nconst createBooking = booking => ({\n    type: CREATE_BOOKING,\n    booking\n})\n\nconst editBooking = booking => ({\n    type: EDIT_BOOKING,\n    booking\n})\n\nconst deleteBooking = booking => ({\n    type: DELETE_BOOKING,\n    booking\n})\n\n\nexport const thunkCreateBooking = (booking) => async dispatch => {\n    const response = await fetch(`/api/taskers/${booking.tasker_id}/book`, {\n        \"method\": \"POST\",\n        \"headers\": { 'Content-Type': 'application/json' },\n        \"body\": JSON.stringify(\n            booking\n        )\n    })\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(createBooking(data))\n    }\n\n}\n\nexport const thunkOneBooking = (bookingId) => async dispatch => {\n    const response = await fetch(`/api/bookings/single/${bookingId}`)\n\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(getBooking(data))\n    }\n}\n\nexport const thunkCurrentUserBookings = () => async dispatch => {\n    const response = await fetch('/api/bookings/all')\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(getAllBookingsAction(data))\n    }\n}\n\nexport const thunkEditBooking = (booking) => async dispatch => {\n    const response = await fetch(`/api/bookings/edit/${booking.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(booking)\n    })\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(editBooking(data))\n    }\n}\n\nexport const thunkDeleteBooking = (bookingId) => async dispatch => {\n    const response = await fetch(`/api/bookings/delete/${bookingId}`, {\n        method: 'DELETE'\n    })\n    if (response.ok) {\n        dispatch(deleteBooking(bookingId))\n    }\n\n}\n\n\nconst initialState = { currentUserBookings: {}, singleBooking: {} }\nconst bookingReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ALL_BOOKINGS: {\n            const newState = {}\n            const allBookings = action.bookings\n            allBookings.forEach(booking => {\n\n                newState[booking.id] = booking\n            })\n            return {\n                ...state, currentUserBookings: newState\n            }\n        }\n        case GET_ONE_BOOKING: {\n            const newState = {}\n            const newBooking = action.booking\n            newState[newBooking.id] = newBooking\n            return {\n                ...state, singleBooking: newState\n            }\n        }\n        case EDIT_BOOKING: {\n            const newState = {}\n            const newBooking = action.booking\n            newState[newBooking.id] = newBooking\n            return {\n                ...state, singleBooking: newState\n            }\n        }\n        case DELETE_BOOKING: {\n            const newState = {\n                ...state,\n                currentUserBookings: { ...state.currentUserBookings },\n                singleBooking: { ...state.singleBooking }\n            }\n            delete newState.currentUserBookings[action.bookingId]\n            delete newState.singleBooking[action.bookingId]\n            return newState\n        }\n\n        default: return state\n    }\n}\n\nexport default bookingReducer\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session'\nimport bookingReducer from './booking';\nimport taskReducer from './task';\nimport reviewsReducer from './review'\nimport taskersReducer from './taskers';\nimport billingsReducer from './billing'\nimport messagesReducer from './messages'\n\n\nconst rootReducer = combineReducers({\n  session,\n  booking: bookingReducer,\n  task: taskReducer,\n  review: reviewsReducer,\n  tasker: taskersReducer,\n  billing: billingsReducer,\n  messages: messagesReducer\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","const GET_ALL_TASKS = \"tasks/getAllTasks\"\n\nconst getAllTasksAction = tasks => ({\n    type: GET_ALL_TASKS,\n    tasks\n})\n\n\nexport const thunkAllTasks = () => async dispatch => {\n    const response = await fetch(\"/api/tasks/all\")\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(getAllTasksAction(data))\n    }\n}\n\n\nconst initialState = { allTasks: {}, singleTask: {} }\nconst taskReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ALL_TASKS: {\n            const newState = {}\n            const allTasks = action.tasks\n            allTasks.forEach( task => {\n                newState[task.id] = task\n            })\n            return {\n                ...state, allTasks: newState\n            }\n        }\n        default:\n            return state\n    }\n\n}\n\n\nexport default taskReducer\n","const GET_ALL_CURR_REVIEWS = \"review/loadCurrUserReviews\"\nconst GET_ALL_REVIEWS = \"review/allReviews\"\nconst CREATE_REVIEW = \"review/createReview\"\nconst EDIT_REVIEW = \"review/editReview\"\nconst GET_ONE_REVIEW = \"review/getReview\"\nconst DELETE_REVIEW = \"review/deleteReview\"\n\nconst loadCurrUserReviews = (reviews) => ({\n    type: GET_ALL_CURR_REVIEWS,\n    reviews\n})\n\nconst loadAllReviews = (reviews) => ({\n    type: GET_ALL_REVIEWS,\n    reviews\n    })\n\nconst getReview = (review) => ({\n    type: GET_ONE_REVIEW,\n    review\n})\n\nconst createReview = (review) => ({\n    type: CREATE_REVIEW,\n    review\n})\n\nconst editReview = (review) => ({\n    type: EDIT_REVIEW,\n    review\n})\n\nconst deleteReview = (review) => ({\n    type: DELETE_REVIEW,\n    review\n})\n\nexport const thunkCurrUserReviews = () => async (dispatch) => {\n    const response = await fetch('/api/reviews/currentUser')\n\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(loadCurrUserReviews(data))\n\n    }\n}\n\nexport const thunkAllReviews = () => async (dispatch) => {\n    const response = await fetch('/api/reviews/all')\n\n    if(response.ok) {\n        const data = await response.json()\n        dispatch(loadAllReviews(data))\n    }\n}\n\nexport const thunkOneReview = (review) => async (dispatch) => {\n    const response = await fetch(`/api/reviews/currentUser/${review.id}`)\n\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(getReview(data))\n    }\n}\n\nexport const thunkCreateReview = (review) => async dispatch => {\n\n    const response = await fetch(`/api/taskers/${review.tasker_id}/reviews`, {\n        method: \"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review)\n    })\n    // we changed body cause we dont need to jsonify\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(createReview(data))\n    }\n}\n\nexport const thunkEditReview = (review) => async dispatch => {\n    const response = await fetch(`/api/reviews/edit/${review.id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(review)\n    })\n\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(editReview(data))\n    }\n}\n\nexport const thunkDeleteReview = (review) => async dispatch => {\n    const response = await fetch(`/api/reviews/delete/${review.id}`, {\n        method: 'DELETE'\n    })\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(deleteReview(data))\n    }\n}\n\n\nconst initialState = { currentUserReviews: {}, singleReview: {}, allReviews: {} }\nconst reviewsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case GET_ALL_CURR_REVIEWS: {\n            const newState = {}\n            const allCurrReviews = action.reviews\n            allCurrReviews.forEach(review => {\n                newState[review.id] = review\n            })\n            return {\n                ...state, \n                currentUserReviews: newState\n            }\n        }\n        case GET_ALL_REVIEWS: {\n            const newState = {}\n            const allReviews = action.reviews\n            allReviews.forEach(review => {\n                newState[review.id] = review\n            })\n            return {\n                ...state,\n                allReviews: newState\n            }\n\n        }\n        case GET_ONE_REVIEW: {\n            const newState = {}\n            const newReview = action.review\n            newState[newReview.id] = newReview\n            return {\n                ...state, singleReview: newState\n            }\n        }\n        case CREATE_REVIEW: {\n            const newState = {}\n            const newReview = action.review\n            newState[newReview.id] = newReview\n            return {\n                ...state,\n                singleReview: newState,\n                allReviews: { ...state.allReviews ,...newState}\n            }\n        }\n        case EDIT_REVIEW: {\n            const newState = {}\n            const newSingleState = { ...state }\n            const newReview = action.review\n            newState[newReview.id] = newReview\n            return {\n                // might not need that new state, that looks odd test otu edit review again later\n                currentUserReviews: { ...state.currentUserReviews, ...newState },\n                singleReview: newState,\n                allReviews: {...state.allReviews}\n            }\n        }\n        case DELETE_REVIEW: {\n            const newState = { ...state.currentUserReviews }\n            const newSingleState = { ...state.singleReview }\n            const reviewId = action.review.reviewId\n            delete newState[reviewId]\n            delete newSingleState[reviewId]\n            return {\n                currentUserReviews: newState,\n                singleReview: newSingleState,\n                allReviews: {...state.allReviews}\n            }\n        }\n\n        default: return state\n    }\n   \n}\nexport default reviewsReducer;\n","const GET_ALL_TASKERS = \"tasker/loadAllTaskers\"\nconst GET_SINGLE_TASKER = \"tasker/loadSingleTasker\"\n\n\n\nconst loadAllTaskers = (taskers) => ({\n    type: GET_ALL_TASKERS,\n    taskers\n})\n\nconst loadSingleTasker = (tasker) => ({\n    type: GET_SINGLE_TASKER,\n    tasker\n})\n\nexport const thunkAllTaskers = () => async (dispatch) => {\n    const response = await fetch('/api/taskers/all')\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(loadAllTaskers(data))\n    }\n}\n\nexport const thunkSingleTasker = (tasker) => async (dispatch) => {\n    const response = await fetch(`/api/taskers/${tasker}`)\n\n    if (response.ok) {\n        const data = await response.json()\n        dispatch(loadSingleTasker(data))\n    }\n}\n\nconst initialState = { \n    allTaskers: {},\n    singleTasker: {}\n}\n\nconst taskersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case GET_ALL_TASKERS: {\n            const newState = {}\n            const allTaskers = action.taskers\n            allTaskers.forEach(tasker => {\n                newState[tasker.id] = tasker\n            })\n            return {\n                ...state,\n                allTaskers: newState\n            }\n        }\n        case GET_SINGLE_TASKER: {\n            const newState = {}\n            const tasker = action.tasker\n            newState[tasker.id] = tasker\n            return {\n                ...state,\n                singleTasker: newState\n            }\n        }\n\n        default: return state\n    }\n}\n\nexport default taskersReducer","const GET_CURRENT_CARDS = \"billing/getallcards\"\nconst CREATE_CARD = \"billing/createCard\"\nconst DELETE_CARD = \"billing/deleteCard\"\n\nconst loadCurrUserCards = (cards)=>({\n    type: GET_CURRENT_CARDS,\n    cards\n})\nconst createCard = (card)=>({\n    type: CREATE_CARD,\n    card\n})\nconst deleteCard = (cardId)=>({\n    type: DELETE_CARD,\n    cardId\n})\n\nexport const thunkCurrUserCards=()=>async(dispatch)=>{\n    const response = await fetch('/api/billing/')\n    if(response.ok){\n        const data = await response.json()\n        dispatch(loadCurrUserCards(data))\n    }\n}\nexport const thunkCreateCard = (card)=> async dispatch =>{\n    const response = await fetch('/api/billing/new', {\n        method: \"POST\",\n        headers: {'Content-Type': 'application/json'},\n        body: JSON.stringify(card)\n    })\n    if(response.ok){\n        const data = await response.json()\n        dispatch(createCard(data))\n    }\n}\n\nexport const thunkDeleteCard = (cardId)=> async dispatch=>{\n    const response = await fetch(`/api/billing/delete/${cardId}`, {\n        \"method\": \"DELETE\"\n    })\n    if (response.ok){\n        dispatch(deleteCard(cardId))\n    }\n}\n\nconst initialState = { currentUserCards:{}}\nconst billingsReducer= (state = initialState, action)=>{\n    switch(action.type){\n        case GET_CURRENT_CARDS:{\n            const newState = {}\n            const allBookings = action.cards\n            allBookings.forEach(card=>{\n                newState[card.id]= card\n            })\n            return {\n                ...state, currentUserCards:newState\n            }\n        }\n        case CREATE_CARD:{\n            const newState={}\n            const newCard = action.card\n            newState[newCard.id]=newCard\n            return {\n                ...state, currentUserCards:{[newCard.id]: newCard}\n\n            }\n        }\n        case DELETE_CARD:{\n            const newState={\n                ...state, currentUserCards:{...state.currentUserCards}\n            }\n            delete newState.currentUserCards[action.cardId]\n            return newState\n        }\n    default:return state\n    }\n\n}\nexport default billingsReducer\n","const GET_ALL_MESSAGES = 'messages/GET_ALL_MESSAGES'\nconst GET_USER_MESSAGES = 'messages/GET_USER_MESSAGES'\nconst CREATE_USER_MESSAGE = 'messages/CREATE_USER_MESSAGE'\nconst loadAllMessages = (msgs) => ({\n    type: GET_ALL_MESSAGES,\n    msgs\n})\nconst loadUserMessages = (msgs)=>({\n    type: GET_USER_MESSAGES,\n    msgs\n})\nconst createUserMessage = (message)=>({\n    type: CREATE_USER_MESSAGE,\n    message\n})\nexport const thunkAllMessages = (id) => async (dispatch) => {\n    const response = await fetch(`/api/messages/${id}/messages`)\n    if(response.ok){\n        const data = await response.json()\n        dispatch(loadAllMessages(data))\n    }\n}\n\nexport const thunkUserMessages = () => async(dispatch)=>{\n    const response = await fetch(`/api/messages/user_messages/all`)\n    if(response.ok){\n        const data = await response.json()\n        dispatch(loadUserMessages(data))\n    }\n}\nexport const thunkCreateUserMessage = (user) =>async (dispatch)=>{\n    const response = await fetch(`/api/messages/${user.id}/messages`, {\n        method:\"POST\",\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(user)\n    })\n    if(response.ok){\n        const data = await response.json()\n         dispatch(createUserMessage(data))\n        return data\n    }\n}\n\nconst initialState = { allMsg: {}, userMsgs:{}}\nconst messagesReducer=( state=initialState, action)=>{\n    let newState;\n    switch(action.type){\n        case GET_ALL_MESSAGES:{\n            newState = {}\n            const allMsgs = action.msgs\n            allMsgs.forEach(msg =>{\n                newState[msg.id] = msg\n            })\n            return {allMsg: newState}\n        }\n        case GET_USER_MESSAGES:{\n            newState={}\n            const userMsgs = action.msgs\n            userMsgs.forEach(msg=>{\n                newState[msg.id]=msg\n            })\n            return {userMsgs:newState}\n        }\n        case CREATE_USER_MESSAGE:{\n            newState={}\n            const newMessage = action.message\n            newState[newMessage.id] = newMessage\n            return {\n                ...state,\n                userMsgs: {...state.userMsgs, ...newState}\n            }\n        }\n        default: return state\n    }\n}\nexport default messagesReducer\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { signUp } from \"../../store/session\";\nimport './SignupForm.css';\n\nfunction SignupFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [city, setCity] = useState(\"\")\n  const [phone_number, setphone_number] = useState(\"\")\n  const [first_name, setfirst_name] = useState(\"\")\n  const [last_name, setlast_name] = useState(\"\")\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n      const data = await dispatch(signUp(username, email, first_name, last_name, password, city, phone_number));\n      if (data) {\n        setErrors(data)\n      }\n    } else {\n      setErrors(['Confirm Password field must be the same as the Password field']);\n    }\n  };\n\n  return (\n    <>\n      <h1>Sign Up</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n        </ul>\n        <label>\n          Email\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Username\n          <input\n            type=\"text\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          First Name\n          <input\n            type='text'\n            value={first_name}\n            onChange={(e) => setfirst_name(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Last Name\n          <input\n            type='text'\n            value={last_name}\n            onChange={(e) => setlast_name(e.target.value)}\n          />\n        </label>\n        <label>\n          City\n          <input\n            type='text'\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n          />\n        </label>\n        <label>\n          Phone Number\n          <input\n            type='text'\n            value={phone_number}\n            onChange={(e) => setphone_number(e.target.value)}\n          />\n        </label>\n\n        <label>\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Confirm Password\n          <input\n            type=\"password\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n          />\n        </label>\n        <div className='loginButtons'>\n          <button type=\"submit\">Sign Up</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default SignupFormPage;\n","import React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport './LoginForm.css';\n\nfunction LoginFormPage() {\n  const dispatch = useDispatch();\n  const sessionUser = useSelector((state) => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n\n  if (sessionUser) return <Redirect to=\"/\" />;\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n\n  return (\n    <>\n      <h1>Log In</h1>\n      <form onSubmit={handleSubmit}>\n        <ul>\n          {errors.map((error, idx) => (\n            <li key={idx}>{error}</li>\n          ))}\n        </ul>\n        <label>\n          Email\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n        </label>\n        <label>\n          Password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </label>\n        <button type=\"submit\">Log In</button>\n      </form>\n    </>\n  );\n}\n\nexport default LoginFormPage;\n","import React from 'react';\nimport { useModal } from '../../context/Modal';\n\nfunction OpenModalButton({\n  modalComponent, // component to render inside the modal\n  buttonText, // text of the button that opens the modal\n  onButtonClick, // optional: callback function that will be called once the button that opens the modal is clicked\n  onModalClose // optional: callback function that will be called once the modal is closed\n}) {\n  const { setModalContent, setOnModalClose } = useModal();\n\n  const onClick = () => {\n    if (onModalClose) setOnModalClose(onModalClose);\n    setModalContent(modalComponent);\n    if (onButtonClick) onButtonClick();\n  };\n\n  return (\n    <button onClick={onClick}>{buttonText}</button>\n  );\n}\n\nexport default OpenModalButton;","import React, { useState } from \"react\";\nimport { login } from \"../../store/session\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport \"./LoginForm.css\";\n\nfunction LoginFormModal() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  const { closeModal } = useModal();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    } else {\n      closeModal()\n    }\n  };\n\n  const autoLogin = e => {\n    setEmail('demo@aa.io')\n    setPassword('password')\n    return dispatch(login({ email, password }))\n      .then(closeModal)\n  }\n\n\n  return (\n    <>\n      <form className='signupForm' onSubmit={handleSubmit}>\n        <h1>Log In</h1>\n        {errors.map((error, idx) => (\n          <p className=\"error\" key={idx}>{error}</p>\n        ))}\n        <div className='signupDiv'>\n          <label>\n            Email\n          </label>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n          />\n\n        </div>\n        {errors.email && <p>{errors.email}</p>}\n        <div className='signupDiv'>\n          <label>\n            Password\n          </label>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n          />\n        </div>\n        <div className='loginButtons'>\n          {errors.password && <p>{errors.password}</p>}\n          <button type=\"submit\" disabled={!email || !password}>Log In</button>\n          <button onClick={autoLogin}>Login in as Demo User</button>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default LoginFormModal;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useModal } from \"../../context/Modal\";\nimport { signUp } from \"../../store/session\";\nimport \"./SignupForm.css\";\n\nfunction SignupFormModal() {\n\tconst dispatch = useDispatch();\n\tconst [email, setEmail] = useState(\"\");\n\tconst [username, setUsername] = useState(\"\");\n\tconst [password, setPassword] = useState(\"\");\n\tconst [confirmPassword, setConfirmPassword] = useState(\"\");\n\tconst [errors, setErrors] = useState([]);\n\tconst [validationErrors, setValidationErrors] = useState(\"\")\n\tconst [city, setCity] = useState(\"\")\n\tconst [phone_number, setphone_number] = useState(\"\")\n\tconst [first_name, setfirst_name] = useState(\"\")\n\tconst [last_name, setlast_name] = useState(\"\")\n\tconst { closeModal } = useModal();\n\n\tconst handleSubmit = async (e) => {\n\t\te.preventDefault();\n\n\t\tlet errors = {}\n\t\tif (!email) errors.email = \"Email is required\"\n\t\tif (!username) errors.username = \"Username is required\"\n\t\tif (!password) errors.password = \"Password is required\"\n\t\tif (!phone_number) errors.phone_number = \"Phone is required\"\n\t\tif (!city) errors.city = \"City is required\"\n\t\tif (!first_name) errors.first_name = 'First name is required'\n\t\tif (!last_name) errors.last_name = 'Last name is required'\n\t\tsetValidationErrors(errors)\n\n\t\tif (!!Object.keys(errors).length) return\n\n\t\tif (password === confirmPassword) {\n\t\t\tconst data = await dispatch(signUp(username, email, first_name, last_name, password, city, phone_number));\n\t\t\tif (data) {\n\t\t\t\tsetErrors(data);\n\t\t\t} else {\n\t\t\t\tcloseModal();\n\t\t\t}\n\t\t} else {\n\t\t\tsetErrors([\n\t\t\t\t\"Confirm Password field must be the same as the Password field\",\n\t\t\t]);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<form className='signupForm' onSubmit={handleSubmit}>\n\t\t\t\t<h1>Sign Up</h1>\n\t\t\t\t{errors.map((error, idx) => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<p className=\"error\" key={idx}>{error}</p>\n\t\t\t\t\t</>\n\t\t\t\t))}\n\t\t\t\t{validationErrors.email ? (<p className=\"error\">{validationErrors.email}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tEmail\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t\t{validationErrors.username ? (<p className=\"error\">{validationErrors.username}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tUsername\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tvalue={username}\n\t\t\t\t\t\tonChange={(e) => setUsername(e.target.value)}\n\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{validationErrors.first_name ? (<p className=\"error\">{validationErrors.first_name}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tFirst Name\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={first_name}\n\t\t\t\t\t\tonChange={(e) => setfirst_name(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{validationErrors.last_name ? (<p className=\"error\">{validationErrors.last_name}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tLast Name\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={last_name}\n\t\t\t\t\t\tonChange={(e) => setlast_name(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{validationErrors.city ? (<p className=\"error\">{validationErrors.city}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tCity\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t{validationErrors.phone_number ? (<p className=\"error\">{validationErrors.phone_number}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tPhone Number\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={phone_number}\n\t\t\t\t\t\tonChange={(e) => setphone_number(e.target.value)}\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\n\t\t\t\t{validationErrors.password ? (<p className=\"error\">{validationErrors.password}</p>) : null}\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label >\n\t\t\t\t\t\tPassword\n\t\t\t\t\t</label>\n\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='signupDiv'>\n\t\t\t\t\t<label>\n\t\t\t\t\t\tConfirm Password\n\t\t\t\t\t</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\tvalue={confirmPassword}\n\t\t\t\t\t\tonChange={(e) => setConfirmPassword(e.target.value)}\n\n\t\t\t\t\t/>\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"signupButton\">\n\n\t\t\t\t<button type=\"submit\">Sign Up</button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t);\n}\n\nexport default SignupFormModal;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logout } from \"../../store/session\";\nimport OpenModalButton from \"../OpenModalButton\";\nimport LoginFormModal from \"../LoginFormModal\";\nimport SignupFormModal from \"../SignupFormModal\";\nimport { useHistory} from 'react-router-dom';\n\nfunction ProfileButton({ user }) {\n  const dispatch = useDispatch();\n  const [showMenu, setShowMenu] = useState(false);\n  const ulRef = useRef();\n  const history = useHistory()\n  const openMenu = () => {\n    if (showMenu) return;\n    setShowMenu(true);\n  };\n\n  useEffect(() => {\n    if (!showMenu) return;\n\n    const closeMenu = (e) => {\n      if (!ulRef.current.contains(e.target)) {\n        setShowMenu(false);\n      }\n    };\n\n    document.addEventListener(\"click\", closeMenu);\n\n    return () => document.removeEventListener(\"click\", closeMenu);\n  }, [showMenu]);\n\n  const handleLogout = (e) => {\n    e.preventDefault();\n    dispatch(logout());\n    closeMenu()\n    history.push('/')\n  };\n\n  const ulClassName = \"profile-dropdown\" + (showMenu ? \"\" : \" hidden\");\n  const closeMenu = () => setShowMenu(false);\n\n  return (\n    <>\n      <button onClick={openMenu}>\n        <i className=\"fas fa-paw\" />\n      </button>\n      <ul className={ulClassName} ref={ulRef}>\n        {user ? (\n          <>\n            <li>{user.username}</li>\n            <li>{user.email}</li>\n            <li>\n              <button onClick={handleLogout}>Log Out</button>\n            </li>\n          </>\n        ) : (\n          <>\n            <OpenModalButton\n              buttonText=\"Log In\"\n              onItemClick={closeMenu}\n              modalComponent={<LoginFormModal />}\n            />\n\n            <OpenModalButton\n              buttonText=\"Sign Up\"\n              onItemClick={closeMenu}\n              modalComponent={<SignupFormModal />}\n            />\n          </>\n        )}\n      </ul>\n    </>\n  );\n}\n\nexport default ProfileButton;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport './Navigation.css';\n\nfunction Navigation({ isLoaded }){\n\tconst sessionUser = useSelector(state => state.session.user);\n\n\treturn (\n\t\t<div className=\"nav-bar-container\">\n\n\t\t\t\t\t\t<div className=\"logo-home\">\n\n\t\t\t\t<NavLink className=\"nav-links-on-navbar panda-logo\" exact to=\"/\"><img className=\"panda-png\" src=\"https://cdn.discordapp.com/attachments/1062942242450460744/1116920295043899504/panda.png\"/></NavLink>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t<div>\n\n\t\t\t\t</div>\n\t\t\t\t<div className=\"other-nav-links\">\n\t\t\t{ sessionUser ?\n\n\n\n\t\t\t<>\n\t\t\t\t<NavLink className=\"nav-links-on-navbar navbargreen\" exact to='/available'>Available taskers!</NavLink>\n\t\t\t\t<NavLink className=\"nav-links-on-navbar navbargreen\" exact to ='/account'>Account</NavLink>\n\t\t\t\t<NavLink className=\"nav-links-on-navbar navbargreen\" exact to ='/users'>Chat with other Users</NavLink>\n\n\n\n\n\t\t\t</>\n\n\t\t\t: null\n\t\t\t}\n\t\t\t{isLoaded && (\n\n\t\t\t\t\t<ProfileButton className=\"profile-dropdown\" user={sessionUser} />\n\n\t\t\t)}\n\t\t\t</div>\n\n\t\t</div>\n\n\t);\n}\n\nexport default Navigation;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { io } from 'socket.io-client';\nimport { useParams } from 'react-router-dom'\nimport { useDispatch } from \"react-redux\";\nimport { thunkAllMessages } from \"../../store/messages\";\nimport \"./Chat.css\"\nlet socket;\n\nconst Chat = () => {\n    const [chatInput, setChatInput] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const user = useSelector(state => state.session.user)\n    const { userMessageId } = useParams()\n    const dispatch = useDispatch()\n\n    const msgs = useSelector(state => state.messages.allMsg)\n\n    const messagesEndRef = useRef(null)\n    const scrollToBottom = () => {\n        messagesEndRef.current?.scrollIntoView({\n            scrollIntoViewOptions: { block: \"nearest\", inline: \"end\" },\n            behavior: \"smooth\"\n        })\n    }\n\n    useEffect(() => {\n        // open socket connection\n        // create websocket\n        socket = io();\n\n        dispatch(thunkAllMessages(userMessageId))\n\n\n        socket.on(\"chat\", (chat) => {\n            setMessages(messages => [...messages, chat])\n        })\n        // when component unmounts, disconnect\n        return (() => {\n            socket.disconnect()\n        })\n    }, [])\n\n\n\n    const updateChatInput = (e) => {\n        setChatInput(e.target.value)\n    };\n\n    const sendChat = (e) => {\n        e.preventDefault()\n\n        socket.emit(\"chat\", { user_id: user.id, body: chatInput, user_message_id: userMessageId });\n\n        dispatch(thunkAllMessages(userMessageId))\n        setChatInput(\"\")\n    }\n\n    useEffect(() => {\n        dispatch(thunkAllMessages(userMessageId))\n\n        scrollToBottom()\n    }, [messages, scrollToBottom()])\n\n    return (\n        <div className=\"chat-center\">\n            <div className=\"chat-container\">\n                <div className=\"chats\">\n                    {msgs && Object.values(msgs).map((msg => {\n                        return (\n                            <div>\n                                {msg.userId === user.id ? <div className=\"mymessage\" >{msg.userInfo.first_name}: <p className=\"my-chat-boxes\">{msg.body}</p>\n                                </div> : <div>{msg.userInfo.first_name}: <p className=\"their-chat-boxes\">{msg.body}</p>\n                                </div>}\n                            </div>\n                        )\n                    }))}\n                    <div ref={messagesEndRef} />\n                </div>\n                {user && (\n                    <div>\n\n                        <form onSubmit={sendChat}>\n                            <div className=\"chat-box\">\n                                <input\n                                    value={chatInput}\n                                    onChange={updateChatInput}\n                                />\n                                <button type=\"submit\">Send</button>\n                            </div>\n                        </form>\n                    </div>\n                )}\n            </div>\n        </div>\n    )\n};\n\n\nexport default Chat;\n","import React from 'react';\nimport { useHistory} from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useModal } from \"../../context/Modal\";\nimport { thunkDeleteReview, thunkCurrUserReviews} from '../../store/review';\n\nconst DeleteReview = ({ review }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { closeModal } = useModal()\n    const handleDelete = e => {\n        dispatch(thunkDeleteReview(review))\n        .then(closeModal)\n        dispatch(thunkCurrUserReviews())\n        history.push('/reviews')\n    }\n\n    return (\n        <>\n        <div>\n            <div>\n        <h1 className='reviewTitle'>Confirm Delete</h1>\n            </div>\n            <p>Are you sure you want to delete this Review?</p>\n            <div>\n                <button onClick={handleDelete}>Delete</button>\n                <button onClick={closeModal}>Cancel</button>\n            </div>\n        </div>\n        </>\n    )\n\n}\n\nexport default DeleteReview","import { useDispatch} from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory} from 'react-router-dom';\nimport { thunkCreateReview, thunkCurrUserReviews, thunkEditReview, thunkOneReview  } from \"../../store/review\";\nimport { useModal } from \"../../context/Modal\";\n\nconst ReviewForm = ({review, formType, disabled, tasker})=>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [review_text, setReview_text] = useState(review?.review_text)\n    const [star_rating, setStar_rating] = useState(review?.star_rating)\n    const [activeRating, setActiveRating] = useState(star_rating)\n    const [errors, setErrors] = useState({})\n    const { closeModal } = useModal()\n    \n\n    useEffect(()=>{\n        setActiveRating(star_rating)\n    },[star_rating])\n\n    const onChange=(number)=>{\n        setStar_rating(parseInt(number))\n    }\n\n    const handleMouseEnter = index=>{\n        if(!disabled){\n            setActiveRating(index+1)\n        }\n    }\n    const handleMouseLeave = ()=>{\n        if(!disabled){\n            setActiveRating(star_rating)\n        }\n    }\n    const handleClick = index =>{\n        if(!disabled){\n            onChange(index+1)\n        }\n    }\n    let arr = []\n        for(let index=0; index<5; index++){\n            const className = index<activeRating ? 'fas fa-star': 'far fa-star'\n            arr.push(\n                <div\n                className ={className}\n                onMouseEnter={()=>handleMouseEnter(index)}\n                onMouseLeave={handleMouseLeave}\n                onClick={()=>handleClick(index)}>\n                </div>\n            )\n        }\n\n    const handleSubmit=async (e)=>{\n        e.preventDefault()\n        let err = {}\n        review = {\n            ...review,\n            review_text,\n            star_rating\n        }\n\n        if(review.review_text.length < 5) {\n            err.review_text = \"Review text needs to be at least 5 characters long\"\n        }\n\n        if(!review.star_rating) {\n            err.star_rating = \"Must rate from 1-5\"\n        }\n        \n        \n        if (formType === \"Create Review\" && !Object.keys(err).length){\n            await dispatch(thunkCreateReview(review))\n            .then(closeModal)\n            history.push(`/taskers/${review.tasker_id}`)\n        }\n        \n        else if (formType === \"Edit Review\" && !Object.keys(err).length) {\n            await dispatch(thunkEditReview(review))\n            .then(closeModal)   \n            history.push('/reviews')\n            dispatch(thunkCurrUserReviews())\n            dispatch(thunkOneReview(review))\n        }\n        \n        if(err) {\n            setErrors(err)\n        }\n        \n        }\n\nreturn (\n\n    <form className='reviewForm 'onSubmit={handleSubmit}>\n\n            <div>\n                <h1>Your Review</h1>\n            </div>\n            {errors.review_text}\n            <div>\n            <textarea\n                className=\"textInfo\"\n                type=\"text\"\n                value={review_text}\n                placeholder=\"What did you think? Any feedback is helpful.\"\n                onChange={e=> setReview_text(e.target.value)}\n            />\n            </div>\n\n\n        {errors.star_rating}\n        <div>\n        {arr} Stars\n        </div>\n        <div>\n            <button type=\"submit\" disabled={!review_text || !star_rating} >Submit your Review</button>\n        </div>\n\n\n    </form>\n)\n}\n\nexport default ReviewForm\n","import ReviewForm from './ReviewForm'\nimport { useDispatch} from 'react-redux';\nimport { useHistory } from 'react-router-dom'\nimport { useModal } from \"../../context/Modal\";\n\n\nconst EditReview = ({ review }) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const { closeModal } = useModal()\n    \n\n    return (\n        <>\n            <ReviewForm\n            review={review}\n            formType=\"Edit Review\"\n            />\n        </>\n    )\n}\n\nexport default EditReview\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { thunkCurrUserReviews } from '../../store/review';\nimport OpenModalButton from \"../OpenModalButton\";\nimport DeleteReview from \"./DeleteReview\";\nimport EditReview from \"./EditReview\";\nimport \"./current_user_review.css\"\n\nconst GetCurrentReviews = () =>{\n    const dispatch = useDispatch()\n\n    const reviews = useSelector(state=> state.review.currentUserReviews)\n\n    useEffect(()=>{\n        dispatch(thunkCurrUserReviews())\n    }, [dispatch])\n\n    // display star rating by rating number\nconst starDisplay=(star_rating)=>{\n    const starsArr=[]\n    for(let i=0;i<star_rating;i++){\n        starsArr.push(<i className=\"fas fa-star\" ></i>)\n    }\n    return starsArr\n}\n// display average rating\nlet totalReviews=0\nlet totalRating=0\nObject.values(reviews).forEach((review)=>{\n    totalRating+=review.star_rating\n    totalReviews++\n})\n\nconst averageRating= totalRating/totalReviews\n\n\nif(!reviews) return \"loading..\"\nreturn(\n    <div>\n  {totalReviews !== 0 ? <h2>Manage your reviews</h2> : <h2>You have no reviews</h2>}\n\n       {\n  averageRating && totalReviews !== 0 ? (\n    <div>\n      <div className=\"review-averages\">\n        <div>\n          Average <i className=\"fas fa-star\"></i>({averageRating.toFixed(1)})\n        </div>\n        <div>\n          Total <i className=\"fas fa-comment-dots\"></i> ({totalReviews})\n        </div>\n      </div>\n    </div>\n  ) : null\n}\n       <div className=\"review-card-container\">\n\n        {Object.values(reviews).map(review=>{\n            return (\n                <div className=\"review-container\">\n                <>\n                <div className=\"review\">\n\n                <div className=\"star-rating-container\">\n                {starDisplay(review?.star_rating)}\n                 \n\n                </div>\n                <div className=\"review-body\">\n                    {review?.review_text}\n                </div>\n                </div>\n                <div className=\"buttons-div\">\n                <div  className=\"single-button\">\n                <OpenModalButton\n                buttonText='Edit'\n                modalComponent={<EditReview review={review} />}\n                />\n                </div>\n                <div  className=\"single-button\">\n                <OpenModalButton\n                className=\"one-button\"\n                buttonText='Delete'\n                modalComponent={<DeleteReview review={review}/>}\n                />\n                </div>\n                </div>\n                </>\n        </div>\n            )\n        })}\n        </div>\n       </div>\n)\n}\n\nexport default GetCurrentReviews\n","import ReviewForm from './ReviewForm'\nimport './Reviews.css'\n\nconst CreateReview=({taskerId})=>{\n    const review = {\n      review_text: \"\",\n      star_rating: \"\",\n      tasker_id: taskerId\n    }\n\n    return(\n        <>\n          <ReviewForm\n            review={review}\n            formType=\"Create Review\"\n          />\n        </>\n    )\n\n}\n\nexport default CreateReview\n","import { useDispatch } from \"react-redux\";\nimport { useModal } from '../../context/Modal'\nimport { thunkCurrentUserBookings, thunkDeleteBooking} from \"../../store/booking\";\n\n\nconst DeleteBooking = ({ bookingId }) => {\n    const dispatch = useDispatch()\n    const { closeModal } = useModal()\n\n    const handleDelete = async (e) => {\n        e.preventDefault()\n\n        await dispatch(thunkDeleteBooking(bookingId))\n        dispatch(thunkCurrentUserBookings())\n        .then(closeModal)\n\n    }\n\n\n    return (\n        <div>\n            <h2 className='bookingTitle'>\n                Are you sure you want to cancel your booking?\n            </h2>\n            <div>\n\n            <button onClick={handleDelete}>\n                Yes (Delete Booking)\n            </button>\n\n            <button onClick={closeModal}>\n                Cancel (Keep Booking)\n            </button>\n            </div>\n        </div>\n    )\n\n\n}\n\nexport default DeleteBooking\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { thunkCurrentUserBookings} from \"../../store/booking\";\nimport OpenModalButton from \"../OpenModalButton\";\nimport CreateReview from '../Reviews/CreateReview'\nimport DeleteBooking from \"./DeleteBooking\";\nimport { thunkAllReviews } from \"../../store/review\";\nimport { thunkAllTasks } from '../../store/task'\nimport { thunkAllTaskers } from \"../../store/taskers\";\nimport \"./GetCurrentBookings.css\"\n\nconst GetCurrentBookings = () => {\n    const dispatch = useDispatch()\n\n    const bookingsObj = useSelector(state => state.booking.currentUserBookings)\n    const bookingsArr = Object.values(bookingsObj)\n    const allReviews = useSelector(state => state.review.allReviews)\n    const currUser = useSelector(state => state.session.user)\n    const findReviews = Object.values(allReviews).filter(review => review.user_id === currUser?.id)\n\n\n    const allTaskersObj = useSelector(state => state.tasker.allTaskers)\n    const allTaskersArr = Object.values(allTaskersObj)\n\n    const matchedTaskersArr = []\n    bookingsArr.forEach(booking => {\n        const matchedTasker = allTaskersArr.find(tasker => booking.tasker_id === tasker.id)\n        if (matchedTasker) {\n            matchedTaskersArr.push(matchedTasker)\n        }\n    })\n\n    useEffect(() => {\n        dispatch(thunkCurrentUserBookings())\n        dispatch(thunkAllReviews())\n        dispatch(thunkAllTasks())\n        dispatch(thunkAllTaskers())\n    }, [dispatch])\n\n    return (\n        <div id=\"outer-container\">\n            <h1>Tasks you've booked</h1>\n            <div id=\"body-container\">\n                {bookingsArr.length > 0 ?\n                    (<div id=\"bookings-container\">\n                        {bookingsArr.map(booking => (\n                            <div id=\"tile\">\n\n\n                                {matchedTaskersArr.filter(tasker => tasker.id === booking.tasker_id).map(tasker => (\n                                    <>\n                                        <div id=\"profile-image-container\" >\n\n                                            {<img class=\"profile-image\" src={tasker.profile_image}></img>}\n                                            <span key={tasker.id}>{tasker.first_name}, {tasker.last_name}</span>\n\n                                            <Link to={`/taskers/${tasker.id}`}>\n                                                <button class=\"contact-tasker-button\">Tasker Profile</button>\n                                            </Link>\n\n                                        </div>\n\n                                    </>\n                                ))}\n\n\n                                <div className=\"booking-description\">\n                                    <h2>{booking.category} in {booking.city}</h2>\n                                    <div class=\"duration-div\">\n                                        <span class=\"bolded\">Task Length:</span>\n                                        <br />\n                                        <span>{booking.duration} task</span>\n\n                                    </div>\n                                    <div>\n                                        <span class=\"bolded\">Details: </span>\n                                        <br />\n                                        <span>{booking.details}</span>\n                                    </div>\n                                    <p> Booked for {booking.updated_at} </p>\n                                </div>\n                                <div className=\"buttons-div\">\n\n                                    <div className=\"review\">\n\n                                        {findReviews.find(review => review.tasker_id === booking.tasker_id) ?\n                                            <button className=\"reviewed-button\" disabled=\"true\">Already reviewed!</button>\n                                            :\n                                            <OpenModalButton\n                                                buttonText=\"Post Your Review!\"\n                                                modalComponent={<CreateReview taskerId={booking.tasker_id} />}\n                                            />\n                                        }\n                                    </div>\n                                    <div class=\"edit-delete-div\">\n\n                                        <Link class=\"edit-button\" to={`/booking/${booking.id}`}>\n                                            <button >\n                                                Edit Booking\n                                            </button>\n                                        </Link>\n\n                                        <OpenModalButton\n                                            buttonText=\"Delete Booking\"\n                                            modalComponent={<DeleteBooking bookingId={booking.id} />}\n                                        />\n                                    </div>\n\n                                </div>\n\n\n                            </div>\n                        ))}</div>)\n                    :\n                    (<h1>You have no bookings.</h1>)}\n\n            </div>\n        </div>\n    )\n}\nexport default GetCurrentBookings\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { thunkAllTasks } from \"../../store/task\";\n\nconst GetAllTasks = () => {\n    const dispatch = useDispatch()\n    const tasksObj = useSelector(state => state.task.allTasks)\n    const tasksArr = Object.values(tasksObj)\n   \n\n    useEffect(() => {\n        dispatch(thunkAllTasks())\n\n    }, [dispatch])\n\n\n    return (\n        <>\n            {tasksArr.map(task => (\n                <>\n                    <div>\n                        id: {task.id}\n                    </div>\n                    <div>\n                        category: {task.category}\n                    </div>\n                    <div>\n                        description: {task.description}\n                    </div>\n                    <div>\n                        tasker_id: {task.tasker_id}\n                    </div>\n                    <div>\n                        available:{task.available}\n                    </div>\n                    <br />\n\n                </>\n            ))}\n        </>\n    )\n}\n\nexport default GetAllTasks\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { useParams } from \"react-router-dom\";\nimport { thunkCreateBooking, thunkCurrentUserBookings, thunkEditBooking} from \"../../store/booking\";\nimport { thunkAllTasks } from \"../../store/task\";\nimport { thunkSingleTasker } from \"../../store/taskers\";\nimport './BookingForm.css'\n\nconst BookingForm = ({ booking, formType }) => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [category, setCategory] = useState(booking?.category)\n    const [city, setCity] = useState(booking?.city)\n    const [duration, setDuration] = useState(booking?.duration)\n    const [details, setDetails] = useState(booking?.details)\n    const [validationErrors, setValidationErrors] = useState(\"\")\n    const { taskerId } = useParams()\n    const allTasksObj = useSelector(state => state.task.allTasks)\n    const allTasks = Object.values(allTasksObj)\n    const taskersTask = allTasks.find(task => task.tasker_id === parseInt(taskerId))\n    const taskerObj = useSelector(state => state.tasker.singleTasker)\n    const tasker = Object.values(taskerObj)\n\n\n    useEffect(() => {\n        dispatch(thunkAllTasks())\n        dispatch(thunkSingleTasker(taskerId))\n    }, [dispatch])\n\n    const handleSubmit = async (e) => {\n        e.preventDefault()\n\n        let errors = {}\n        if (!category) errors.category = \"Category is required\"\n        if (!city) errors.city = \"City is required\"\n        if (!duration) errors.duration = \"Duration is required\"\n        if (!details) errors.details = \"Details are required\"\n        setValidationErrors(errors)\n\n        if (!!Object.keys(errors).length) return\n\n        booking = {\n            ...booking,\n            category,\n            city,\n            duration,\n            details\n\n        }\n        if (formType === \"Create Booking\") {\n            dispatch(thunkCreateBooking(booking))\n            dispatch(thunkCurrentUserBookings())\n            history.push(`/bookings/all`)\n        }\n\n        if (formType === \"Edit Booking\") {\n            dispatch(thunkEditBooking(booking))\n            dispatch(thunkCurrentUserBookings())\n            history.push(`/bookings/all`)\n        }\n    }\n\n\n    return (\n\n        <div id=\"form-container\">\n\n\n            <div id=\"booking-form\" className=\"booking-form border\">\n                <form onSubmit={handleSubmit}>\n                    {formType === \"Edit Booking\" ?\n                        (<div>\n                            <h2>Edit your Booking for {booking.category} in {booking.city}</h2>\n                        </div>\n                        ) : (<h2>Create your Booking with {tasker[0]?.first_name}</h2>)}\n\n                    {formType === \"Create Booking\" ? (\n                        <div id=\"category\" className=\"border\">\n                            <div className=\"heading-error\">\n                                <h3>\n                                    What category did you want {tasker[0]?.first_name} to help out with?\n                                </h3>\n                                {validationErrors.category ? (<p className=\"errors\" >{validationErrors.category}</p>) : null}\n                            </div>\n\n                            <select onChange={e => setCategory(e.target.value)}>\n                                <option value=\"\">--Please choose a category--</option>\n                                <option disabled={taskersTask?.category !== 'Software Engineering'} value=\"Software Engineering\">\n                                    Software Engineering\n                                </option>\n                                <option disabled={taskersTask?.category !== 'Matchmaking'} value=\"Matchmaking\">\n                                    Matchmaking\n                                </option>\n                                <option disabled={taskersTask?.category !== 'Cooking'} value=\"Cooking\">\n                                    Cooking\n                                </option>\n                                <option disabled={taskersTask?.category !== 'Dancing'} value=\"Dancing\">\n                                    Dancing\n                                </option>\n                                <option disabled={taskersTask?.category !== 'Tutoring'} value=\"Tutoring\">\n                                    Tutoring\n                                </option>\n                                <option disabled={taskersTask?.category !== 'Music'} value=\"Music\">\n                                    Music\n                                </option>\n                            </select>\n                        </div>)\n                        :\n                        null\n                    }\n\n                    {formType === \"Create Booking\" ? (\n                        <div id=\"city\" className=\"border\">\n                            <div className=\"heading-error\">\n                                <h3>\n                                    Which city are you located?\n                                </h3>\n                                {validationErrors.city ? (<p className=\"errors\">{validationErrors.city}</p>) : null}\n                            </div>\n                            <select onChange={e => setCity(e.target.value)}>\n                                <option value=\"\">--Please choose a city--</option>\n                                <option value=\"San Francisco\">\n                                    San Francisco\n                                </option>\n                                <option disabled={taskersTask?.city !== 'Los Angeles'} value=\"Los Angeles\">\n                                    Los Angeles\n                                </option>\n\n                                <option disabled={taskersTask?.city !== 'Miami'} value=\"Miami\">\n                                    Miami\n\n                                </option>\n\n                                <option disabled={taskersTask?.city !== 'Toronto'} value=\"Toronto\">\n                                    Toronto\n\n                                </option>\n                                <option disabled={taskersTask?.city !== 'Joshua Tree'} value=\"Joshua Tree\">\n                                    Joshua Tree\n\n                                </option>\n                            </select>\n                        </div>)\n                        :\n                        null\n                    }\n\n                    <div id=\"duration\" className=\"border\">\n                        <div className=\"heading-error\">\n                            <h3>\n                                How long is your task?\n                            </h3>\n                            {validationErrors.duration ? (<p className=\"errors\">{validationErrors.duration}</p>) : null}\n                        </div>\n                        <div className=\"radio duration-container\">\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"short\"\n                                    name=\"duration\"\n                                    checked={duration === \"short\"}\n                                    onChange={e => setDuration(e.target.value)}\n                                />\n                                Short - Est. 1hr\n                            </label>\n\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"medium\"\n                                    name=\"duration\"\n                                    checked={duration === \"medium\"}\n                                    onChange={e => setDuration(e.target.value)}\n\n                                />\n                                Medium - Est. 2-3 hrs\n                            </label>\n                            <label>\n                                <input\n                                    type=\"radio\"\n                                    value=\"long\"\n                                    name=\"duration\"\n                                    checked={duration === \"long\"}\n                                    onChange={e => setDuration(e.target.value)}\n\n                                />\n\n                                Long - Est. 4+ hrs\n                            </label>\n                        </div>\n                    </div>\n\n                    <div id=\"details\" className=\"border\">\n                        <div className=\"heading-text\">\n                            <div className=\"heading-error\">\n                                <h3>\n                                    Tell us the details of your task\n                                </h3>\n                                {validationErrors.details ? (<p className=\"errors\">{validationErrors.details}</p>) : null}\n                            </div>\n                            Start the conversation and tell {tasker[0]?.first_name} what you need done. This helps your Tasker what to expect when preparing for your appointment. Don't worry, you can always edit your booking later!\n                        </div>\n                        <div className=\"border\">\n\n                            <textarea\n                                type=\"text\"\n                                placeholder=\"Please write something about your task!\"\n                                value={details}\n                                onChange={e => setDetails(e.target.value)}\n\n                            />\n                        </div>\n                    </div>\n                    <div className=\"center\">\n                        <button type=\"submit\" disabled={!(category || city || duration || details)}>Submit</button>\n                    </div>\n                </form>\n\n            </div>\n        </div>\n    )\n}\nexport default BookingForm\n","import BookingForm from \"./BookingForm\";\nimport { useParams } from \"react-router-dom\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { thunkCurrentUserBookings } from \"../../store/booking\"\nimport { useHistory } from \"react-router-dom\";\n\n\nconst CreateBooking = () => {\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { taskerId } = useParams()\n    const bookingsObj = useSelector(state => state.booking.currentUserBookings)\n    const bookingsArr = Object.values(bookingsObj)\n\n    const booked = bookingsArr.find(booking => booking.tasker_id === parseInt(taskerId))\n\n    useEffect(() => {\n        dispatch(thunkCurrentUserBookings())\n    }, [dispatch])\n\n    if(booked) {\n        history.push(\"/bookings/all\")\n    }\n\n    const booking = {\n        category: \"\",\n        city: \"\",\n        duration: \"\",\n        details: \"\",\n        tasker_id: taskerId\n    }\n\n    return (\n\n        <>\n                <BookingForm\n                    booking={booking}\n                    formType=\"Create Booking\"\n                />\n        </>\n    )\n}\nexport default CreateBooking\n","import BookingForm from \"./BookingForm\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { thunkOneBooking } from \"../../store/booking\";\nimport { useEffect } from \"react\";\n\nconst EditBooking = () => {\n    const dispatch = useDispatch()\n    const { bookingId } = useParams()\n    const booking = useSelector(state => state.booking.singleBooking[bookingId])\n\n\n\n    useEffect(() => {\n        dispatch(thunkOneBooking(bookingId))\n    }, [dispatch, bookingId])\n\nif(!booking) return \"no booking with that id\"\n    return (\n\n        <>\n            <BookingForm\n            booking = {booking}\n            formType = \"Edit Booking\"\n            />\n        </>\n    )\n\n}\n\n\nexport default EditBooking\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { thunkAllTaskers } from \"../../store/taskers\";\nimport { NavLink } from \"react-router-dom\";\nimport './GetAllTaskers.css'\nconst GetAllTaskers = () => {\n    const dispatch = useDispatch()\n    const allTaskers = useSelector(state => state.tasker.allTaskers)\n\n    useEffect(() => {\n        dispatch(thunkAllTaskers())\n    }, [dispatch])\n\n    if(!allTaskers) return \"loading..\"\n\n    return (\n        <>\n        <div className=\"available-tasker-div\">\n\n        <h2 className=\"our-available-taskers\">Available Taskers</h2>\n        </div>\n        <div className=\"outer-available\">\n\n                {Object.values(allTaskers).map(tasker => {\n                    return (\n\n                        <>\n                        {tasker.available ?\n                        <div className=\"available-tasker-card\">\n                        <NavLink className=\"available-links\" exact to={`taskers/${tasker.id}`}>\n\n\n\n                        <div className=\"image-card\">\n                            <img className=\"imag\" src={tasker.profile_image}/>\n\n                        </div>\n\n                    <div className=\"available-tasker-info\">\n\n                        <div className=\"available-first-last-name\">\n                        <h3>{tasker.first_name} {tasker.last_name}</h3>\n                        </div>\n\n                        <div className=\"availables available-city\">\n                       <i className=\"fas fa-city availablesss\">   </i>{tasker.city}\n                        </div>\n\n                        <div className=\"availables available-email\">\n                       <i className=\"fab fa-telegram-plane\"> </i>{tasker.email}\n                        </div>\n                       \n                        <div className=\"availables available-tools\">\n                        <i className=\"fas fa-wrench\"> </i>{tasker.tools}\n                        </div>\n                        <div className=\"availables available-vehicle\">\n                        <i className=\"fas fa-truck\"> </i>{tasker.vehicles}\n                        </div>\n                        <h3 className=\"available-view-profile\" >View Tasker Profile</h3>\n\n                    </div>\n                        <br></br>\n                        </NavLink></div>\n                      : null\n                        }\n                        </>\n\n                    )\n                })}\n           </div>\n        </>\n    )\n}\n\nexport default GetAllTaskers\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { thunkSingleTasker } from \"../../store/taskers\";\nimport { thunkAllReviews } from \"../../store/review\";\nimport { useParams } from 'react-router-dom';\nimport CreateReview from \"../Reviews/CreateReview\";\nimport OpenModalButton from \"../OpenModalButton\";\nimport { thunkCurrentUserBookings } from \"../../store/booking\";\nimport { NavLink } from 'react-router-dom';\nimport './SingleTasker.css'\nconst GetSingleTasker = () => {\n    const dispatch = useDispatch()\n    const { taskerId } = useParams()\n    const singleTasker = useSelector(state => state.tasker.singleTasker[taskerId])\n    const allReviews = useSelector(state => state.review.allReviews)\n    const allReviewsArr = Object.values(allReviews)\n    const currUser = useSelector(state => state.session.user)\n    const allBookings = useSelector(state => state.booking.currentUserBookings)\n    const allBookingsArr = Object.values(allBookings)\n\n\n    const allowed = allBookingsArr.filter(booking => (currUser?.id === booking.user_id))\n    const checkBookings = []\n\n    allowed.forEach(booking => {\n        if (booking.tasker_id === parseInt(taskerId))\n            return checkBookings.push(booking.tasker_id)\n    })\n\n    useEffect(() => {\n        dispatch(thunkSingleTasker(taskerId))\n        dispatch(thunkAllReviews())\n        dispatch(thunkCurrentUserBookings())\n    }, [dispatch, taskerId])\n    const allTaskerRev = allReviewsArr.filter(review => review.tasker_id === parseInt(taskerId))\n    const checkReviews = []\n\n    if (!singleTasker) return \"This tasker does not exist\"\n    allTaskerRev.forEach(rev => checkReviews.push(rev.user_id))\n    return (\n        <>\n            <div className=\"single-tasker-main-container\">\n\n                <div className=\"single-img-container\">\n                    <img className=\"single-tasker-img\" src={singleTasker.profile_image} />\n                    <div className=\"single-tasker-name\">\n                        {singleTasker.first_name} {singleTasker.last_name}\n                    </div>\n                    <div className=\"about-me-container\">\n                        <h4 className=\"single-about-me\">About Me:</h4>\n                        <div className=\"single-tasker-about-me\">\n                            {singleTasker.bio}\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"single-tasker-other-info\">\n                    {!currUser ? <h2>Sign up to book this tasker!</h2> : null}\n\n                    {currUser && ((singleTasker.available === true) ?\n                        (<div className=\"book-tasker-header\">\n                            <h1>This tasker is available to book!</h1>\n                            <NavLink className=\"book-tasker-link\" exact to={`/${singleTasker.id}/bookings/new`}>Book this Tasker</NavLink>\n                        </div>)\n                        :\n                        <h1>This tasker is unavailable at the moment</h1>)}\n\n                    <div className=\"single-tasker-city-tools-etc\">\n                        <h3 className=\"single-tasker-my-skills\">My Skills: </h3>\n                        <div>\n                            {singleTasker.city}\n                        </div>\n                        <div>\n                            {singleTasker.email}\n                        </div>\n                        <div>\n                            {singleTasker.phone_number}\n                        </div>\n\n                        <div>\n                            {singleTasker.tools}\n                        </div>\n                        <div>\n                            {singleTasker.vehicles}\n                        </div>\n                    </div>\n\n\n                    {currUser ? ((checkReviews.includes(currUser.id) || !(checkBookings.includes(parseInt(taskerId))))) ? null :\n                        <OpenModalButton\n                            buttonText='Post Your Review!'\n                            modalComponent={<CreateReview taskerId={singleTasker.id} />}\n                        />\n                        : null}\n\n\n                    <br></br>\n                    <div>\n                        <div className=\"single-tasker-reviews-container\">\n                            <h3 className=\"single-tasker-review\">Reviews:</h3>\n\n                            {allTaskerRev.length > 0 ? (allTaskerRev.map(rev => {\n\n                                return (\n                                    <>\n                                        <div className=\"single-tasker-reviews\">\n\n                                            <div>\n                                                <i className=\"fas fa-star\"> {rev.star_rating}</i>\n                                            </div>\n                                            <div>\n                                                {rev.review_text}\n                                            </div>\n                                        </div>\n\n\n                                    </>\n                                )\n                            })) : \"Book and be the first to Review!\"}   </div>\n                    </div>\n                </div>\n            </div>\n\n        </>\n    )\n}\n\nexport default GetSingleTasker\n","import React, { useEffect, useState} from 'react'\nimport \"./index.css\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { thunkAllTaskers } from '../../store/taskers';\nimport { NavLink,useHistory ,useLocation} from 'react-router-dom/cjs/react-router-dom.min';\n\nconst SearchBar = () =>{\nconst history=useHistory()\nconst location=useLocation()\nconst dispatch = useDispatch()\nconst [searchInput, setSearchInput] = useState(\"\")\nconst allTaskersObj = useSelector(state => state.tasker.allTaskers)\nconst allTaskers = Object.values(allTaskersObj)\n\nuseEffect(() => {\n    dispatch(thunkAllTaskers())\n}, [dispatch])\n\nconst handleChange = (e) => {\n    e.preventDefault();\n    setSearchInput(e.target.value)\n}\n\nconst enter =(e)=>{\n    if (e.key==='Enter'){\n        history.push(`/results?query=${searchInput}`);\n    }\n}\n\n\nreturn (\n    <div className=\"home\">\n      <div className=\"search-container\">\n    \n        <div className=\"book-your-next-task\">\n        <h1 className=\"h2-book-next\">Book your next Task</h1>\n        </div>\n        <div className=\"search-card\">\n                <input\n        className=\"search-bar\"\n        type=\"search\"\n        placeholder=\"See below for some categories to search\"\n        onChange={handleChange}\n        value={searchInput}\n        onKeyDown={enter}\n      />\n\n\n\n\n      <NavLink className=\"home-link-search\" to={{ pathname: \"/results\", search: `?query=${searchInput}` }}>\n        <div className=\"search-home-button\">\n\n        <button hidden className=\"home-button-search\"><i className=\"fas fa-search\"></i></button>\n        </div>\n      </NavLink>\n      </div>\n </div>\n      {location.pathname !== '/results' && (\n        <>\n        <div className=\"home-top-taskers\">\n\n        <div className=\"container-ikea\">\n          <img className=\"bunny-yellow\" src=\"https://www.taskrabbit.com/v3/assets/_/_/_/_/_/_/_/apps/web/app/assets/images/web/dashboard/active-task-dashboard-img-da2fc974db98b71b4da8eef8f25db4fb.png\"/>\n          <div className=\"ikea-1\">\n\n        <h2 className=\"how-panda-use\">How do you use your TaskPanda Account?</h2>\n        <h3 className=\"how-panda-use\">A select below feature to recieve special offers coming soon!</h3>\n          </div>\n        </div>\n\n        <div className=\"partnered\">\n          <div> <i className=\"fas fa-star stars-home\"></i>\n        <i className=\"fas fa-star stars-home\"></i>\n        <i className=\"fas fa-star stars-home\"></i>\n        <i className=\"fas fa-star stars-home\"></i>\n          <i className=\"fas fa-star stars-home\"></i></div>\n\n\n<p> 10+ Reviews</p>\n<img className=\"app-academy-logo\" src=\"https://assets-global.website-files.com/5dcc7f8c449e597ed83356b8/603820afd31232aab368ea6f_New%20Red-logo-emblem.webp\"/>\n<p> Partnered with App Academy</p>\n        </div>\n        <div className=\"home-h2-tasker\">\n\n          <h2>View some of our top taskers!</h2>\n          </div>\n        <div className=\"container2\">\n\n\n          {allTaskers.map((tasker, index) => {\n            if (index < 3) {\n              return (\n                <div className=\"tasker-containers\">\n                  <div className=\"popular-taskers-home\">\n                    Popular\n                    </div>\n                <React.Fragment key={tasker.id}>\n                  <div >\n                    <NavLink exact to={`/taskers/${tasker.id}`}>\n                      <img className=\"imags\" src={tasker.profile_image}/>\n\n                    </NavLink>\n                  </div>\n                  <div className=\"fist-last-name-home\">\n                    {tasker.first_name}\n                    {tasker.last_name}\n                  </div>\n                  <div className=\"container-avalable-elite\">\n                       <div>\n                    {tasker.available ? 'Available' : 'Not Available'}\n                  </div>\n\n                  <div className=\"about-tasker\">\n                  <div className=\"hr\">\n                  </div>\n\n\n                <p className=\"elite-tasker\">Elite Tasker</p><hr></hr>\n                  </div>\n                  </div>\n                  <div className=\"tools-bio\">\n                    <div className=\"ha city\">\n                    <i className=\"fas fa-city\"> </i>{tasker.city}\n                    </div>\n                    <div className=\"ha prices\">\n                    <i className=\"fas fa-money-bill\"> </i>{tasker.hourly_rate}\n\n                    </div>\n                    <div className=\"ha vehicles\">\n                    <i className=\"fas fa-truck\"> </i>{tasker.vehicles}\n\n                    </div>\n                  \n                    <div className=\"view-tasker-profile\">View Tasker Profile</div>\n\n                   \n                  </div>\n\n                  <br />\n                </React.Fragment>\n                </div>\n              );\n            }\n\n            return null;\n          })} </div>\n                </div>\n        </>\n      )}\n    </div>\n  );\n\n}\n\nexport default SearchBar;\n","import { useHistory } from 'react-router-dom';\nimport { useDispatch} from 'react-redux';\nimport { thunkDeleteCard, thunkCurrUserCards } from '../../store/billing';\nimport { useModal } from \"../../context/Modal\";\n\nconst DeleteCard = ({card}) =>{\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const { closeModal } = useModal()\n    const handleDelete= async (e)=>{\n        e.preventDefault();\n\n        await dispatch(thunkDeleteCard(card.id))\n        .then(closeModal)\n        dispatch(thunkCurrUserCards)\n        history.push('/billing')\n    }\n    return(\n        <>\n        <div>\n        <div>\n        <h2>Confirm Delete</h2>\n        </div>\n        <p>Are you sure you want to remove this card?</p>\n        <div>\n        <button onClick={handleDelete}>Delete</button>\n        <button onClick={closeModal}>No, keep card</button>\n        </div>\n        </div>\n        </>\n    )\n}\nexport default DeleteCard;\n","import { useDispatch} from \"react-redux\";\nimport {  useState } from \"react\";\nimport { useHistory} from 'react-router-dom';\nimport { thunkCreateCard, thunkCurrUserCards } from \"../../store/billing\";\nimport { useModal } from '../../context/Modal';\n\nconst BillingForm = ({ card, formType, disabled})=>{\n    const dispatch= useDispatch()\n    const history = useHistory()\n    const { closeModal } = useModal()\n    const [first_name, set_first_name] = useState(\"\")\n    const [last_name, set_last_name] = useState(\"\")\n    const [card_number, set_card_number] = useState(\"\")\n    const [security_code, set_security_code] = useState(\"\")\n    const [debit_card, set_debit_card] = useState(\"\")\n    const [errors, setErrors] = useState({})\n\nconst handleSubmit = async (e) =>{\n    e.preventDefault()\n\n  const errorHandling = {}\n    if (!first_name) errorHandling.first_name = \"First Name is required\"\n    if(!last_name) errorHandling.last_name = \"Last Name is required\"\n    if(!card_number) errorHandling.card_number = \"Card Number is required\"\n    if(card_number.toString().length != 16) errorHandling.card_number  = \"card must be 16 integers long\"\n    if(isNaN((card_number))) errorHandling.card_number = \"Must be integer\"\n    if(!security_code) errorHandling.security_code = \"Security code is required\"\n    if(security_code.toString().length != 3) errorHandling.security_code = \"Security code must be 3 integers\"\n    if(isNaN((security_code))) errorHandling.security_code = \"Must be integer\"\n    if(!debit_card) errorHandling.debit_card = \"Please select one\"\n\n    setErrors(errorHandling)\n\n    card = {\n        ...card,\n        first_name,\n        last_name,\n        card_number,\n        security_code,\n        debit_card\n    }\n    if (formType ===\"Create Card\"){\n        if(Object.values(errorHandling).length<1){\n        await dispatch(thunkCreateCard(card))\n        .then(closeModal)\n        history.push('/billing')\n    }\n    dispatch(thunkCurrUserCards())\n\n    }\n}\nreturn(\n    <form className='billingForm'onSubmit={handleSubmit}>\n\n            <div>\n                <h2>Card Information</h2>\n            </div>\n\n            {errors.first_name ? (<p>{errors.first_name}</p>) :null}\n        <div>\n            <input\n            type=\"text\"\n            value={first_name}\n            placeholder=\"first name\"\n            onChange={e=> set_first_name(e.target.value)}\n            />\n        </div>\n  {errors.last_name ? (<p>{errors.last_name}</p>) :null}\n        <div>\n            <input\n            type=\"text\"\n            value={last_name}\n            placeholder=\"last name\"\n            onChange={e=> set_last_name(e.target.value)}\n            />\n        </div>\n {errors.card_number ? (<p>{errors.card_number}</p>) :null}\n        <div>\n            <input\n            type=\"text\"\n            value={card_number}\n            placeholder=\"card_number \"\n            onChange={e=> set_card_number(e.target.value)}\n            />\n        </div>\n {errors.security_code ? (<p>{errors.security_code}</p>) :null}\n            <div>\n         <input\n\n            type=\"text\"\n            value={security_code}\n            placeholder=\"security code \"\n            onChange={e=> set_security_code(e.target.value)}\n            />\n            </div>\n\n\n {errors.debit_card ? (<p>{errors.debit_card}</p>) :null}\n        <div>\n            <div>\n                   Debit\n            <input\n            type=\"radio\"\n            value=\"yes\"\n            name=\"debit?\"\n            onChange={e=> set_debit_card(e.target.value)}\n            />\n            Credit\n                      <input\n            type=\"radio\"\n            value=\"no\"\n            name=\"debit?\"\n            onChange={e=> set_debit_card(e.target.value)}\n    />\n            </div>\n\n        </div>\n\n\n        <button type=\"submit\">Add New Card</button>\n    </form>\n)\n\n}\nexport default BillingForm\n","import BillingForm from \"./BillingForm\";\n\n\nconst CreateCard = () =>{\n    const newCard = {\n        first_name:\"\",\n        last_name:\"\",\n        card_number:\"\",\n        security_code:\"\",\n        debit_card:\"\"\n    }\n    return(\n        <BillingForm\n        newCard={newCard}\n        formType=\"Create Card\"\n        />\n    )\n}\n\nexport default CreateCard;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect} from \"react\";\nimport { thunkCurrUserCards } from '../../store/billing'\nimport DeleteCard from '../../components/Billing/DeleteCard'\nimport OpenModalButton from \"../OpenModalButton\";\nimport CreateCard from \"./CreateCard\"\nimport \"./display_card.css\"\nimport { useModal } from '../../context/Modal';\n\n\nconst GetCurrentCards = () =>{\n    const dispatch = useDispatch()\n    const billings = useSelector(state =>state.billing.currentUserCards)\n    const {setModalContent}=useModal()\n\n    const billingsArr = Object.values(billings)\n    useEffect(()=>{\n        dispatch(thunkCurrUserCards())\n    }, [dispatch])\n\n    if(!billings){\n        return \"loading..\"\n    }\n\n    const openModal = (modalComponent) => {\n        setModalContent(modalComponent);\n      };\n    \nreturn(\n    <>\n        <h1>Saved cards</h1>\n    <div className=\"card_container\">\n    <div className=\"card button-container\" onClick={()=>openModal(<CreateCard/>)} >\n        <div className=\"add_button\">+ Add Payment Card</div>\n    </div>\n   {billingsArr.map((billing)=>(\n       <div key={billing.id} className=\"card\">\n        <div className=\"debit_credit\">\n            {billing.debit_card===\"yes\" && <div>DEBIT</div>}\n            {billing.debit_card===\"no\" && <div>CREDIT</div>}\n        </div>\n        <div className=\"card-header\">\n    <div className=\"card_ending\"> <div className=\"dots\">····  ····  ···· </div>{(billing.card_number).toString().slice(12,16)}</div>\n        </div>\n            <div className=\"card-body\">\n\n    <div className=\"card_name\">{billing.first_name}, {billing.last_name}</div>\n            \n            </div>\n        <OpenModalButton\n        buttonText=\"Delete Card\"\n        modalComponent={<DeleteCard\n            card = {billing}\n            />}\n            \n            />\n\n\n    </div>\n   ))}\n\n\n\n    </div>\n   </>\n)\n\n}\nexport default GetCurrentCards;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\nimport \"./AccountPage.css\"\n\nconst AccountPage = () => {\n    const currUser = useSelector(state => state.session.user)\n\n    return (\n        <div id=\"account-body-div\">\n            <div className=\"account-heading-content-div\">\n                <h2>Your Account</h2>\n                <div class=\"account-div\">\n\n                    <div className='links-div'>\n                        <div>\n                            <NavLink exact to='/reviews'>Manage Your Reviews</NavLink>\n                        </div>            \n                        <div>\n                            <NavLink exact to='/billing'>Your Payments</NavLink>\n                        </div>\n                        <div>\n                            <NavLink exact to='/bookings/all'>Your bookings</NavLink>\n                        </div>\n                    </div>\n                    <div className='user-info-div'>\n                        <div className='currUser-name'>\n                        <i class=\"fa-solid fa-user\"></i>\n                            <span>{currUser.first_name}, {currUser.last_name}</span>\n                        </div>\n                        <div className='currUser-email'>\n                            <i class=\"fa-solid fa-envelope\"></i>\n                            <span>{currUser.email}</span>\n                        </div>\n                        <div className='currUser-phone'>\n                            <i class=\"fa-solid fa-phone\"></i>\n                            <span>{currUser.phone_number}</span>\n                        </div>\n                        <div className='currUser-city'>\n                            <i class=\"fa-sharp fa-solid fa-location-dot\"></i>\n                            <span>{currUser.city}</span>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default AccountPage\n","import React, { useEffect, useState } from 'react'\nimport \"./index.css\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from 'react-router-dom/cjs/react-router-dom.min';\nimport { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom'\nimport SearchBar from '../SearchBar';\n\n\nconst SearchResults = () => {\n  const [searchResults, setSearchResults] = useState([])\n  const location = useLocation();\n  const searchInput = new URLSearchParams(location.search).get(\"query\") || \"\";\n\n\n  useEffect(() => {\n    handleSearch();\n  }, [searchInput]);\n\n\n\n  const enter = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault()\n      handleSearch()\n    }\n  }\n  //need to add event listener to submit when pressing enter.\n\n\n  const handleSearch = () => {\n    fetch(`/api/search/?query=${searchInput}`)\n      .then((response) => response.json()\n      )\n      .then((data) => setSearchResults(data.results))\n      .catch((error) => console.error(error))\n  }\n\n  const highlightText = (text) => {\n    const lowerCaseText = text?.toLowerCase();\n    const lowerCaseSearchInput = searchInput.toLowerCase();\n    const parts = [];\n    let startIndex = 0;\n\n    if (!searchInput) {\n      return text;\n    }\n\n    while (startIndex < text?.length) {\n      const index = lowerCaseText.indexOf(lowerCaseSearchInput, startIndex);\n      if (index === -1) {\n        parts.push(text.substr(startIndex));\n        break;\n      }\n      parts.push(text.substring(startIndex, index));\n      parts.push(\n        <span className=\"highlighted\">\n          {text.substr(index, searchInput.length)}\n        </span>\n      );\n      startIndex = index + searchInput.length;\n    }\n\n    return parts;\n  };\n\n  return (\n    <section className=\"root\">\n      <div>\n        <SearchBar searchInput={searchInput} handleSearch={handleSearch} />\n \n        <div class=\"all-results\">\n\n          {searchResults?.length > 0 ? (\n            searchResults.map((result) => (\n\n              <>\n                <Link class=\"link-to-taskers\" to={`/taskers/${result.id}`}>\n                  <div className=\"test\">\n\n                    <div>\n\n                    </div>\n                    <div className=\"result-card\">\n                      <div class=\"profile-pic\">\n                        <div>\n                          <img class=\"imag\" src={result.url} />\n                        </div>\n\n                          <button className=\"contact-button\">Contact tasker!</button>\n\n\n                      </div>\n\n                    </div>\n\n                    <div className=\"info\">\n                      <div className=\"name-price\">\n                        <div>\n                          <h2>{highlightText(result?.firstName)}, {highlightText(result?.lastName[0])}</h2>\n                        </div>\n                        <div className=\"price\">{highlightText(result?.price)}</div>\n\n\n                      </div>\n\n                      <div className=\"tasker-details\">\n                        <div><i class=\"fas fa-truck\"></i>{highlightText(result?.vehicles)}</div>\n\n                        <div><i className=\"fas fa-toolbox\"></i>{highlightText(result?.tools)}</div>\n                      </div>\n\n                      <div className=\"tasker-bio-card\">\n                        <div className='text-to-help'>\n                          How I can help:\n                        </div>\n\n\n                        <div className=\"tasker-bio\" key={result?.id}>{highlightText(result?.bio)}</div>\n                        <div>{highlightText(result?.city)}</div>\n                        <div>contact tasker: email: {highlightText(result?.email)}, phone number:{highlightText(result?.phone)}</div>\n                        {result.tasks.map((task) => (\n                          <>\n\n                            <div>{highlightText(task?.category)}</div>\n                            <div>{highlightText(task?.description)}</div>\n\n                          </>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                </Link>\n                <br></br>\n\n              </>\n\n\n\n            ))\n          ) :\n            (\n              <div> Sorry, no Results found :( </div>\n            )\n          }\n\n\n        </div>\n\n      </div>\n    </section>\n  )\n\n}\n\nexport default SearchResults;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from 'react-router-dom';\nimport { thunkAllMessages, thunkCreateUserMessage, thunkUserMessages } from \"../../store/messages\";\nimport \"./Users.css\"\nconst Users = ({ user }) => {\n    const history = useHistory()\n    const dispatch = useDispatch()\n    const msgs = useSelector(state => state.messages.userMsgs)\n    const currUser = useSelector(state => state.session.user)\n    let check;\n    if (msgs) check = Object.values(msgs)\n    let userMsgId;\n    const checkUserMsg = () => {\n        for (let i = 0; i < check?.length; i++) {\n            if ((check[i].user1_id === currUser.id && check[i].user2_id === user.id) || (check[i].user1_id === user.id && check[i].user2_id === currUser.id)) {\n                userMsgId = check[i].id\n                return true\n            }\n        }\n        return false\n    }\n\n    const checks = checkUserMsg()\n    const createUserMsgId = async (e) => {\n\n        if (checks) {\n            history.push(`/chat/${userMsgId}`)\n        } else {\n            const userMsgs = await dispatch(thunkCreateUserMessage(user))\n            // await dispatch(thunkUserMessages())\n            history.push(`/chat/${userMsgs.id}`)\n        }\n    }\n\n\n    return (\n\n        <div className=\"users-page\">\n\n\n            {user.id !== currUser.id ?\n                <>\n                    <div className=\"user-to-chat\">\n                        <div>\n                            <div>\n                                {user.first_name} {user.last_name}\n                            </div>\n                            <div className=\"description-box\">\n                                Hi, my name is {user.first_name}. Chat with me here or connect with me by\n                                email: {user.email}\n                                {/* I live in {user.city}. My username is {user.username} */}\n                            </div>\n                        </div>\n\n\n                        <i className='far fa-comments actual' onClick={createUserMsgId}></i>\n                    </div>\n                </>\n                : <h3 className=\"task-panda-top\">{user.first_name}</h3>}\n        </div>\n\n    )\n}\n\nexport default Users\n","import {useParams} from 'react-router-dom'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { thunkAllUsers } from '../../store/session';\nimport { useEffect } from \"react\";\nimport { NavLink } from 'react-router-dom/cjs/react-router-dom.min';\nimport { thunkAllMessages, thunkUserMessages } from '../../store/messages';\nimport Users from './Users';\n\nconst UserProfile = () => {\n// const allUsers = useSelector(state=> state)\nconst dispatch = useDispatch()\nconst {userId} = useParams()\n\n\n\nuseEffect(()=>{\n    dispatch(thunkAllUsers())\n    dispatch(thunkUserMessages())\n}, [dispatch])\nconst users = useSelector(state=> state.session.allUsers)\n\n// const createUserMsg = (user) => {\n\n// }\n\n    return(\n        <>\n        <h2 className=\"task-panda-community\">Task Panda Community!</h2>\n        <div className=\"task-panda-p\">\n                    <p>Meet other TaskPanda users and Chat with them! Just click on the Chat Icon</p><i className=\"far fa-comments\"></i><p>to connect with them!</p>\n\n        </div>\n        {/* User component */}\n\n        <div className=\"users-container\">\n        <h3 className=\"task-panda-top\">Task Panda Users</h3>\n                    {users && Object.values(users).map(user=>{\n            return (\n                <Users key={user.id} user={user} />\n\n            )\n        })}\n        </div>\n\n        </>\n    )\n}\nexport default UserProfile;\n","import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport SignupFormPage from \"./components/SignupFormPage\";\nimport LoginFormPage from \"./components/LoginFormPage\";\nimport { authenticate } from \"./store/session\";\nimport Navigation from \"./components/Navigation\";\nimport GetCurrentUserReviews from \"./components/Reviews/CurrentUserReviews\"\nimport EditReview from \"./components/Reviews/EditReview\"\nimport GetCurrentBookings from \"./components/Bookings/GetCurrentBookings\"\nimport GetAllTasks from \"./components/Tasks/GetAllTasks\"\nimport CreateBooking from \"./components/Bookings/CreateBooking\";\nimport EditBooking from \"./components/Bookings/EditBooking\";\nimport GetAllTaskers from \"./components/Taskers/GetAllTaskers\";\nimport GetSingleTasker from \"./components/Taskers/SingleTasker\"\nimport SearchBar from \"./components/SearchBar\";\nimport GetCurrentCards from \"./components/Billing/CurrentUserCards\";\nimport AccountPage from \"./components/AccountPage/AccountPage\";\nimport SearchResults from \"./components/SearchResults\";\nimport Chat from \"./components/Chat/Chat\"\nimport UserProfile from \"./components/UserProfiles/UserProfile\";\nfunction App() {\n  const dispatch = useDispatch();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    dispatch(authenticate()).then(() => setIsLoaded(true));\n  }, [dispatch]);\n\n  return (\n    <>\n      <Navigation isLoaded={isLoaded} />\n      {isLoaded && (\n        <Switch>\n          <Route path=\"/login\" >\n            <LoginFormPage />\n          </Route>\n          <Route path=\"/signup\">\n            <SignupFormPage />\n          </Route>\n          <Route exact path=\"/\" component={SearchBar}></Route>\n          <Route exact path=\"/chat/:userMessageId\" component={Chat}></Route>\n          <Route exact path=\"/results\" component={SearchResults}></Route>\n          <Route exact path=\"/users\" component={UserProfile}></Route>\n\n          <Route exact path='/reviews' component={GetCurrentUserReviews}/>\n          <Route exact path='/account' component={AccountPage} />\n\n          <Route exact path=\"/:taskerId/bookings/new\" component={CreateBooking}/>\n          <Route exact path=\"/bookings/all\" component={GetCurrentBookings}/>\n          <Route exact path=\"/booking/:bookingId\" component={EditBooking}/>\n          <Route exact path=\"/tasks/all\" component={GetAllTasks}/>\n          <Route exact path='/available' component={GetAllTaskers} />\n          <Route exact path=\"/taskers/:taskerId\" component={GetSingleTasker} />\n          <Route exact path='/review/:reviewId' component={EditReview} />\n          <Route exact path=\"/billing\" component={GetCurrentCards}></Route>\n        </Switch>\n\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { ModalProvider, Modal } from \"./context/Modal\";\nimport configureStore from \"./store\";\nimport * as sessionActions from \"./store/session\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== \"production\") {\n\twindow.store = store;\n\twindow.sessionActions = sessionActions;\n}\n\n// Wrap the application with the Modal provider and render the Modal component\n// after the App component so that all the Modal content will be layered as\n// HTML elements on top of the all the other HTML elements:\nfunction Root() {\n\treturn (\n\t\t<ModalProvider>\n\t\t\t<Provider store={store}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<App />\n\t\t\t\t\t<Modal />\n\t\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n\t\t</ModalProvider>\n\t);\n}\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<Root />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);"],"sourceRoot":""}